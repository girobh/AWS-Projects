Project:
AWS Identity and Access Management (IAM) Automated User Migration and Management

Description:
I migrated workloads in a corporate data center to AWS in this project. The company has an average of 100 people on the IT team. My job was to create a solution that would meet the needs of the company. Users must be created because the team will access the console to perform operations. In addition to migrating these users in an automated way, I associated the permissions with the groups. For security reasons, the users had MFA (Multi-Factor Authentication) enabled on their accounts.

Environment:
AWS Identity and Access Management / Shell Script / AWS CLI / GitBash

Premise:
Automated migration of 100 IT team accounts to AWS

What was the outcome of the project?
The project's outcome was automating 100 user accounts from the IT team to AWS using AWS Identity and Access Management (IAM). In addition, permissions were associated with groups and MFA (multi-factor authentication) was enabled on user accounts for security.

The following technologies and tools were used to achieve this result:

AWS Identity and Access Management (IAM): IAM was the central service used to create and manage user accounts on AWS. Through IAM, it was possible to create user accounts in bulk, assign permissions to groups, and configure MFA authentication.

Shell Script: Shell Script was used to automate the creation user accounts in IAM. Shell Script enabled the execution of AWS CLI (Command Line Interface) commands to create users, groups, policies, and other necessary configurations.

AWS CLI: The AWS CLI interacted with AWS from the command line. It was used to execute commands to create and manage IAM resources, such as creating users, groups, and policies, assigning permissions, enabling MFA, and other actions required for automated migration.

GitBash: GitBash was used as a command line environment on Windows to execute the shell scripts and interact with the AWS CLI.

The project included the following steps.

Create users: The shell script and AWS CLI created the 100 users in the IAM. This step was automated to speed up the process and avoid manually creating each user individually.

Assign permissions to groups: Groups were created in the IAM, and the required permissions were assigned to each group. Users were then added to the appropriate groups, ensuring they had the appropriate permissions to perform their tasks.

Enable MFA: MFA authentication was configured for each user account. MFA adds an extra layer of security by requiring users to provide a second authentication factor, such as a token or mobile application, and their login credentials.

Test and validate: Once the automated migration process was complete, testing was performed to verify that users were created correctly, that they were assigned to the correct groups, and that MFA was adequately enabled.

The result of the project was the automated migration of 100 user accounts from the IT team to AWS, with access permissions associated with the appropriate groups and MFA enabled for each account. This allowed the IT team to access the AWS console and perform their work securely and efficiently.
